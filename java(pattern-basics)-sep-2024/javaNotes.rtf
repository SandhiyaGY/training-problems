{\rtf1\ansi\ansicpg1252\cocoartf2820
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid1\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww16680\viewh18420\viewkind0
\pard\tx220\tx720\tx930\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\sl360\slmult1\pardirnatural\qj\partightenfactor0
\ls1\ilvl0
\f0\fs24 \cf0 {\listtext	\uc0\u9642 	}
\f1\b\fs28 TIME COMPLEXITY
\f0\b0 \
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\sl480\slmult1\pardirnatural\qj\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	\uc0\u9642 	}Sample program T:O(1)\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\sl360\slmult1\pardirnatural\qj\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	\uc0\u9642 	}Single for T:O(n)\
{\listtext	\uc0\u9642 	}Nested for T:O(n*n)\
{\listtext	\uc0\u9642 	}Double for T:O(2n)\
{\listtext	\uc0\u9642 	}while inside for with 1 variable (i)   T:O(n)\
{\listtext	\uc0\u9642 	}if n=16 iteration=4 T:O(logbase2(n))   //base2 :4*2->16\
{\listtext	\uc0\u9642 	}if n=16 iteration=4 inside for T:O(n logbase2(n))\
{\listtext	\uc0\u9642 	}
\f1\b DECLARING LIST IN JAVA\
\ls1\ilvl0
\f0\b0 {\listtext	\uc0\u9642 	}Syntax: List<Integer> objectName=new typeOfList<>();\
{\listtext	\uc0\u9642 	}ex:List<Integer> l1=new ArrayList<>();\
{\listtext	\uc0\u9642 	}Adding elements syntax:objectName.add(value)\
{\listtext	\uc0\u9642 	}ex:l1.add(10)\
{\listtext	\uc0\u9642 	}Accessing elements Syntax:objectName.get(index)\
{\listtext	\uc0\u9642 	}ex:l1.get(0)\
\pard\tx220\tx720\tx912\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\sl360\slmult1\pardirnatural\qj\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	\uc0\u9642 	}Subset of list Syntax:objectName.subList(startIndex,endIndex)\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\sl360\slmult1\pardirnatural\qj\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	\uc0\u9642 	}ex:l1.subList(1,2)\
{\listtext	\uc0\u9642 	}To initialize default values Syntax: List<Integer> objectName=new typeOfList<>(Collections.nCopies(indexValue,value);\
{\listtext	\uc0\u9642 	}ex:List<Integer> l1=new ArrayList<>(Collections.nCopies(5,0)); //output:0 0 0 0 0\
{\listtext	\uc0\u9642 	}To reverse list Syntax:Collections.reverse(objectName)\
{\listtext	\uc0\u9642 	}ex:Collections.reverse(l1)\
{\listtext	\uc0\u9642 	}To Sort Syntax:Collections.sort(objectName)\
{\listtext	\uc0\u9642 	}ex:Collections.sort(l1)\
{\listtext	\uc0\u9642 	}To set value Syntax:objectName.set(index,element)\
{\listtext	\uc0\u9642 	}ex:l1.set(2,100)\
{\listtext	\uc0\u9642 	}To Sort in reverse Syntax:Collections.sort(objectName,Collections.reverseOrder())\
{\listtext	\uc0\u9642 	}
\f1\b DECLARING HASHMAP (key,value pair)\
\ls1\ilvl0
\f0\b0 {\listtext	\uc0\u9642 	}Syntax:HashMap<Integer,Integer> objectName=new HashMap<>();\
{\listtext	\uc0\u9642 	}ex:HashMap<Integer,Integer> h1=new HashMap<>();\
{\listtext	\uc0\u9642 	}Adding elements Syntax:objectName.put(key, value)\
{\listtext	\uc0\u9642 	}ex.h1.put(1,20)\
{\listtext	\uc0\u9642 	}Asseccing elements  Syntax:objectName.get(key)\
{\listtext	\uc0\u9642 	}ex:h1.get(1)\
{\listtext	\uc0\u9642 	}Iterating hashmap Syntax:objectName.entrySet()\
{\listtext	\uc0\u9642 	}ex:for(var it:h1.entrySet())\
{\listtext	\uc0\u9642 	}
\f1\b DECLARING HASHSET\
\ls1\ilvl0
\f0\b0 {\listtext	\uc0\u9642 	}Syntax:HashSet<Integer> objectName=new HashSet<>();\
{\listtext	\uc0\u9642 	}ex:HashSet<Integer> s1=new HashSet<>();\
{\listtext	\uc0\u9642 	}To check if it is present:objectName.contains(element)\
{\listtext	\uc0\u9642 	}
\f1\b Graph traversal techniques
\f0\b0 -preorder,postorder,inorder(recursion algorithm must)\
}